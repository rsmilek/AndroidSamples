<?xml version="1.0" encoding="UTF-8" ?>
<!--For all properties see: http://developer.android.com/guide/topics/resources/menu-resource.html-->
<menu xmlns:android="http://schemas.android.com/apk/res/android"
      xmlns:app="http://schemas.android.com/apk/res-auto">

  <!--Update strings and icons-->
  
  <!-- The app:showAsAction attribute specifies whether the action should be shown as a button on the app bar. 
  If you set app:showAsAction="ifRoom" (as in the example code's favorite action), the action is displayed as a button if there is room in the app bar for it;
  if there is not enough room, excess actions are sent to the overflow menu. 
  If you set app:showAsAction="never" (as in the example code's settings action), the action is always listed in the overflow menu, not displayed in the app bar  -->
  
  <item android:id="@+id/action_item1"
	      android:title="Item1"
	      app:showAsAction="never"/>

  <item android:id="@+id/action_item2"
         android:title="Item2"
         app:showAsAction="never"/>

</menu>

<!-- Code to implement into Activity:


  <item android:id="@+id/action_edit"
	      android:title="Edit"
	      android:icon="@android:drawable/ic_menu_edit"
	      app:showAsAction="ifRoom"/>

  <item android:id="@+id/action_save"
         android:title="Save"
         android:icon="@android:drawable/ic_menu_save"
         app:showAsAction="ifRoom|withText"/>


public override bool OnCreateOptionsMenu(IMenu menu)
{
  //change main_compat_menu
	MenuInflater.Inflate(Resource.Menu.menu, menu);
	return base.OnCreateOptionsMenu(menu);
}


public override bool OnOptionsItemSelected(IMenuItem item)
{
	switch (item.ItemId) {
	case Resource.Id.action_edit:
		Toast.MakeText (this, "You pressed edit action!", ToastLength.Short).Show ();
		break;
	case Resource.Id.action_save:
		Toast.MakeText (this, "You pressed save action!", ToastLength.Short).Show ();
		break;
	}
	return base.OnOptionsItemSelected(item);
}

-->